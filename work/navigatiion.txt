1.	implementation 'com.android.support:design:29.0.0'

2.	Menu tuzamiz

3.	Nav view uchun header tuzmiz

4.	Activity tuzamiz

5.	java filega bog`laymiz

In deeps expalaned



Navigation ni view tuzish
2 unda 2 header va item click(menu) qismlari bor

-nav_haeder.xml 
buni o`zinga yoqgandek qilib tuzib ol.

-main_menu.xml
menu ni ichida
    <group android:checkableBehavior="single">
        <item
            android:id="@+id/mainPage"
            android:icon="@drawable/ic_baseline_home_24"
            android:title="Main page" />
          ....add other items
    </group>
    <item android:title="Connection">
        <menu>
            <item
                android:id="@+id/telegram"
                android:title="Telegram" />
          ....add other items
        </menu>
    </item>

preview uchun root menu ga pastdagini qo`ishish kerak.
xmlns:tools="http://schemas.android.com/tools"
    tools:showIn="navigation_view"



Activity
shu activity ga activity_main.xml qismi
### rooti DrawerLayout qilinadi
	shu rootiga kerakli attributlar
		-width, height lar match_parent
		-android:fitsSystemWindows="true"
		-id		
	preview uchun esa pastdagi 2 ta codelar
		-xmlns:tools="http://schemas.android.com/tools"
		-tools:openDrawer="start"

 # Asosiy ko`rinadigan oyna
	-biror ViewGroup   view tanlanadi misol LinearLayout
   unga 2 ta asosiy companent kritiladi
	-Toolbar
	-FrameLayout  (fragmentlar, contentlar ...) uchun
	
	#Toolbar  
	- androidx.appcompat.widget.Toolbar	
	-id
	-width match_parent
	-height  ?attr/actionBarSize
	-background="@color/colorPrimary"
	-elevation="4dp"
	-android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        -app:popupTheme="@style/ThemeOverlay.AppCompat.Light"	
	
	#FrameLayout  fragmentlar uchun contairner
	-id
	-width, height match_parent

 # NavigationView  left dan chiqadigan view attributlari
	-com.google.android.material.navigation.NavigationView
	-id 
	-width wrap_content
	-height match_parent
	-app:headerLayout="@layout/main_layout"
        -android:layout_gravity="start"
        -app:menu="@menu/main_menu"	


	
Themes
agar appda ActionBar kerak bo`lsa biz shu navbarView ishlatiladigan  activityni noActionbar qilishimiz kerak, agar app da Actionbar bo`lmasa parent in o`zini NoActionBar qilsakham bo`ladi.

nega NoactionBAr chunki biz ActionBAr o`rniga Toolbar dan foydalanishimiz kerak humburger iconni uchun shunga Actionbarni olib tashlaymiz.

faqat 1 activityda actionBarni olib tashlash yo`li
<style name="NoActionBar" parent="AppTheme">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item ame="android:statusBarColor">
              @android:color/transparent</item>
    </style>
keyin shuni kerakli activity theme ga qo`yamiz.
android:theme="@style/NoActionBar"




jav qismiga code tuzamiz
MainActivity.class
#Toolbar	
	Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
#DrawerLayout 
	private DrawerLayout drawerLayout;
	drawerLayout = findViewById(R.id.drawer);
   ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);// ikkita oxirdagi string filelar ko`ra olmaydiganlar uchun ovoz chiqrganda kerka bo`ladi.

        drawerLayout.addDrawerListener(toggle);
        toggle.syncState();
	
#onBackPressed
	if (drawerLayout.isDrawerOpen(GravityCompat.START)) {
            drawerLayout.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }


#navigationview clicks

NavigationView navigationView = findViewById(R.id.navigationView);
        navigationView.setNavigationItemSelectedListener(listener);
        if (savedInstanceState==null){// first time activity created  code will work. buni if siz qilsaham bo`ladi lekin rotateda u yana shuni set qiladi shuni oldini olish uchun.
        navigationView.setCheckedItem(R.id.mainPage);
        }

#Click listener

    private NavigationView.OnNavigationItemSelectedListener listener = new NavigationView.OnNavigationItemSelectedListener() {
        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {

            switch (item.getItemId()) {
                case R.id.mainPage:
                    Toast.makeText(MainActivity.this, "Main", Toast.LENGTH_SHORT).show();
                    break;
                case R.id.secondPage:
                    Toast.makeText(MainActivity.this, "Second", Toast.LENGTH_SHORT).show();
                    break;
                case R.id.thirdPage:
                    Toast.makeText(MainActivity.this, "Third", Toast.LENGTH_SHORT).show();
                    break;
            }
            drawerLayout.closeDrawer(GravityCompat.START);//navigationviewni close qiladi.
            return true;
        }
    };












Qo`shimcha
navigation ni itmewelarni colorlari

        app:itemBackground="#f00"
        app:itemTextColor="#fff"


codes



main_menu.xml

<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    tools:showIn="navigation_view">

    <group android:checkableBehavior="single">
        <item
            android:id="@+id/mainPage"
            android:icon="@drawable/ic_baseline_home_24"
            android:title="Main page" />
        <item
            android:id="@+id/secondPage"
            android:icon="@drawable/ic_baseline_home_24"
            android:title="Second page" />
        <item
            android:id="@+id/thirdPage"
            android:icon="@drawable/ic_baseline_home_24"
            android:title="Third page" />
    </group>


    <item android:title="Connection">
        <menu>
            <item
                android:id="@+id/telegram"
                android:title="Telegram" />
            <item
                android:id="@+id/shareIt"
                android:title="Share it" />
            <item
                android:id="@+id/help"
                android:title="Help" />
        </menu>

    </item>


</menu>




menu_header.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="16dp"
    android:theme="@style/ThemeOverlay.AppCompat.Dark"
    android:background="#6DE872">
    <ImageView
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:layout_marginTop="32dp"
        android:src="@mipmap/ic_launcher"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/name"
        android:text="Vali"
        android:textSize="24sp"
        android:textStyle="bold"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/email"
        android:text="Valisdbs@gmail.com"
        android:textSize="21sp"
        />

</LinearLayout>



themes.xml
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="NoActionBar" parent="AppTheme">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="android:statusBarColor">@android:color/transparent</item>
    </style>


</resources>

AndroidManifest.xml
<activity android:name=".MainActivity" android:theme="@style/NoActionBar">


string.xml
 <string name="navigation_drawer_open">Open navigation drawer</string>
 <string name="navigation_drawer_close">Close navigation drawer</string>







activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:openDrawer="start"
    android:id="@+id/drawer"
    tools:context=".MainActivity">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="@color/colorPrimary"
            android:elevation="4dp"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />

        <FrameLayout
            android:id="@+id/container"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />
    </LinearLayout>

    <com.google.android.material.navigation.NavigationView
        android:id="@+id/navigationView"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        app:headerLayout="@layout/menu_header"
        android:layout_gravity="start"

        app:menu="@menu/main_menu" />


</androidx.drawerlayout.widget.DrawerLayout>




MainActivity.class


public class MainActivity extends AppCompatActivity {
    DrawerLayout drawerLayout;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        drawerLayout = findViewById(R.id.drawer);

        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);

        drawerLayout.addDrawerListener(toggle);
        toggle.syncState();


        NavigationView navigationView = findViewById(R.id.navigationView);
        navigationView.setNavigationItemSelectedListener(listener);
        if (savedInstanceState==null){// first time activity created  code will work.
        navigationView.setCheckedItem(R.id.mainPage);
        }

    }


    @Override
    public void onBackPressed() {
        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {
            drawerLayout.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }


    private NavigationView.OnNavigationItemSelectedListener listener = new NavigationView.OnNavigationItemSelectedListener() {
        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {

            switch (item.getItemId()) {
                case R.id.mainPage:
                    Toast.makeText(MainActivity.this, "Main", Toast.LENGTH_SHORT).show();
                    break;
                case R.id.secondPage:
                    Toast.makeText(MainActivity.this, "Second", Toast.LENGTH_SHORT).show();
                    break;
                case R.id.thirdPage:
                    Toast.makeText(MainActivity.this, "Third", Toast.LENGTH_SHORT).show();
                    break;
            }
            drawerLayout.closeDrawer(GravityCompat.START);//navigationviewni close qiladi.
            return true;
        }
    };
}












































































